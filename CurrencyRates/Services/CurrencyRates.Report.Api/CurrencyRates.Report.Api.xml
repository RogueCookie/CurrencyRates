<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CurrencyRates.Report.Api</name>
    </assembly>
    <members>
        <member name="M:CurrencyRates.Report.Api.Controllers.ReportController.Get">
            <summary>
            Dratuti
            </summary>
            <returns></returns>
        </member>
        <member name="T:CurrencyRates.Report.Api.Extensions.SwaggerExtension">
            <summary>
            Swagger set up. Implementation of Swagger settings
            </summary>
        </member>
        <member name="M:CurrencyRates.Report.Api.Extensions.SwaggerExtension.RegisterSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Swagger set up. Implementation of Swagger settings
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:CurrencyRates.Report.Api.Extensions.SwaggerUiExtension">
            <summary>
            Add swagger in middleware
            </summary>
        </member>
        <member name="M:CurrencyRates.Report.Api.Extensions.SwaggerUiExtension.RegisterSwaggerUi(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Register swagger UI. Enable middleware to serve generated Swagger as a JSON endpoint
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:CurrencyRates.Report.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            Allow to read parameters appsettings.json when app starts and if .env have the same variable as in appsettings then they were
            overwritten with parameters that are passed to .env file
            This is how we configure the application without changing the upsets physically on the disk
            </summary>
        </member>
    </members>
</doc>
