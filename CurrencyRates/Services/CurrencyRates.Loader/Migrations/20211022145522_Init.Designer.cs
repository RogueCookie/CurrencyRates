// <auto-generated />
using System;
using CurrencyRates.Loader.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CurrencyRates.Loader.Migrations
{
    [DbContext(typeof(LoaderContext))]
    [Migration("20211022145522_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("loader")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CurrencyAlias")
                        .HasColumnType("text")
                        .HasComment(" Shortcut of currency");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.CurrencyRatesDaily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CurrencyBaseId")
                        .HasColumnType("integer");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyBaseId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProviderId");

                    b.ToTable("CurrencyRatesDailies");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.CurrencyRatesWeekly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CurrencyBaseId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CurrencyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<decimal>("MaxRatesPerWeek")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MinRatesPerWeek")
                        .HasColumnType("numeric");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyBaseId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProviderId");

                    b.ToTable("CurrencyRatesWeeklies");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ProviderName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.CurrencyRatesDaily", b =>
                {
                    b.HasOne("CurrencyRates.Loader.DAL.Model.Currency", "CurrencyBase")
                        .WithMany()
                        .HasForeignKey("CurrencyBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CurrencyRates.Loader.DAL.Model.Currency", "Currency")
                        .WithMany("CurrencyRatesDailies")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CurrencyRates.Loader.DAL.Model.Provider", "Provider")
                        .WithMany("CurrencyRatesDailies")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("CurrencyBase");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.CurrencyRatesWeekly", b =>
                {
                    b.HasOne("CurrencyRates.Loader.DAL.Model.Currency", "CurrencyBase")
                        .WithMany()
                        .HasForeignKey("CurrencyBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CurrencyRates.Loader.DAL.Model.Currency", "Currency")
                        .WithMany("CurrencyRatesWeeklies")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CurrencyRates.Loader.DAL.Model.Provider", "Provider")
                        .WithMany("CurrencyRatesWeeklies")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("CurrencyBase");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.Currency", b =>
                {
                    b.Navigation("CurrencyRatesDailies");

                    b.Navigation("CurrencyRatesWeeklies");
                });

            modelBuilder.Entity("CurrencyRates.Loader.DAL.Model.Provider", b =>
                {
                    b.Navigation("CurrencyRatesDailies");

                    b.Navigation("CurrencyRatesWeeklies");
                });
#pragma warning restore 612, 618
        }
    }
}
