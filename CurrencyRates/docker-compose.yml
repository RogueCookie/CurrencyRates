version: '3.4'

networks:
  cr: {}

services:  
  cr_report_api:
    image: ${DOCKER_REGISTRY}/cr_report_api:${TAG}
    build:
      context: .
      dockerfile: Services/CurrencyRates.Report.Api/Dockerfile
    networks:
      - cr
    ports:
      - 86:80
    depends_on:
      - elasticsearch

  cr_scheduler:
    image: ${DOCKER_REGISTRY}/cr_scheduler:${TAG}
    build:
      context: .
      dockerfile: Services/CurrencyRates.Scheduler.Api/Dockerfile
    networks:
      - cr
    ports:
      - 84:80
    depends_on:
      - cr_rabbitmq
      - elasticsearch
      - cr_postgres
   
  cr_loader:
    image: ${DOCKER_REGISTRY}/cr_loader:${TAG}
    build:
      context: .
      dockerfile: Services/CurrencyRates.Loader/Dockerfile
    networks:
      - cr
    restart: on-failure
    depends_on:
      - elasticsearch
      - cr_postgres

  cr_czbank_connector:
    image: ${DOCKER_REGISTRY}/cr_czbank_connector:${TAG}
    build:
      context: .
      dockerfile: Services/CurrencyRates.CzBank.Connector/Dockerfile
    networks:
      - cr
    restart: on-failure
    depends_on:
      - cr_scheduler
      - elasticsearch

  cr_rabbitmq:
    container_name: cr_rabbitmq_container
    image: rabbitmq:3.8.11-management
    networks:
      - cr
    ports:
      - 85:15672
    restart: on-failure

  cr_postgres:
    container_name: cr_postgres_container
    image: postgres:13.1 
    networks:
      - cr
    restart: on-failure

  cr_pgadmin4:
    container_name: cr_pgadmin4_container
    image: dpage/pgadmin4:latest
    networks:
      - cr
    ports:
      - 8086:80
    restart: on-failure

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - cr

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.16.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - cr

  apm:
    image: docker.elastic.co/apm/apm-server:7.16.2
    container_name: apm
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    ports:
      - "8200:8200"
    expose:
      - "8200"
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - cr